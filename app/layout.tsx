import type { Metadata } from "next";
import { Geist_Mono } from "next/font/google";
import localFont from "next/font/local";
import "./globals.css";
import { cn } from "@/lib/utils";
import { WorkspaceWrapper } from "@/app/workspace-wrapper";
import {
  WorkspaceProvider,
  useWorkspace,
} from "@/app/contexts/WorkspaceContext";
import { Toaster } from "@/components/ui/toaster";
import { ManageProjectsDialog } from "@/components/dialogs/manage-projects-dialog";
import { SidebarProvider, SidebarInset } from "@/components/ui/sidebar";
import { SlimSidebar } from "@/components/layout/slim_sidebar/slim-sidebar";
import { Task } from "@/app/types/Task";
import { Project } from "@/app/types/Project";

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const inter = localFont({
  src: [
    {
      path: "../public/fonts/InterVariable.woff2",
      weight: "100 900",
    },
    {
      path: "../public/fonts/InterVariable-Italic.woff2",
      weight: "100 900",
      style: "italic",
    },
  ],
  variable: "--font-inter",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// Define the content component separately
function WorkspaceContent({
  tasks,
  projects,
  children,
}: {
  tasks?: Task[]; // Make optional since it will be injected
  projects?: Project[]; // Make optional since it will be injected
  children: React.ReactNode;
}) {
  return (
    <SidebarProvider
      className="relative flex flex-1 overflow-hidden"
      style={
        {
          "--sidebar-width": "300px",
        } as React.CSSProperties
      }
    >
      <SlimSidebar tasks={tasks || []} projects={projects || []} />
      <SidebarInset className="bg-white/50">{children}</SidebarInset>
    </SidebarProvider>
  );
}

export default function RootLayout({
  children,
  modal,
  main,
  quadrants,
}: Readonly<{
  children: React.ReactNode;
  modal: React.ReactNode;
  main: React.ReactNode;
  quadrants: React.ReactNode;
}>) {
  return (
    <html lang="en" className={`${inter.variable} ${geistMono.variable}`}>
      <body
        className={cn(
          "antialiased font-sans bg-zinc-50 text-zinc-800",
          modal ? "overflow-hidden" : "overflow-auto"
        )}
      >
        <WorkspaceProvider>
          <WorkspaceContent>
            {children}
            {quadrants}
            {main}
          </WorkspaceContent>
          {modal}
          <ManageProjectsDialog />
          <Toaster />
        </WorkspaceProvider>
      </body>
    </html>
  );
}
